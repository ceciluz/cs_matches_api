---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/matches":
    post:
      summary: Creates a match
      tags:
      - Matches
      description: Create a match between two teams
      parameters: []
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/match"
  "/players":
    get:
      summary: Retrieves all players
      tags:
      - Players
      description: Retrieve all players
      responses:
        '200':
          description: OK
    post:
      summary: 'Create a player '
      tags:
      - Players
      parameters: []
      description: Creates player
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#components/schemas/player_params"
  "/players/{id}":
    get:
      summary: Retrieves a player based on his id
      tags:
      - Players
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Retrieves a player based on his id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    patch:
      summary: Updates a player information
      tags:
      - Players
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Updates a player based on his id
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#components/schemas/player_params"
    delete:
      summary: Delete a player information
      tags:
      - Players
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Deletes a player information based on his id
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  "/teams":
    get:
      summary: Shows all teams
      tags:
      - Teams
      description: Shows all teams in database
      responses:
        '200':
          description: OK
    post:
      summary: Create teams
      tags:
      - Teams
      parameters: []
      description: Create a new team in database
      responses:
        '201':
          description: Create
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/team_params"
  "/teams/{id}":
    get:
      summary: Shows team
      tags:
      - Teams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Shows team based on id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    patch:
      summary: Update a team
      tags:
      - Teams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Update a new team in database
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/team_params"
    delete:
      summary: Deletes a team
      tags:
      - Teams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: Deletes a team based on its id
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    match:
      type: object
      properties:
        team_home_score:
          type: integer
          default: 0
          example: 20
          description: test
        team_away_score:
          type: integer
          default: 0
          example: 25
        team_home_id:
          type: integer
          example: 1
        team_away_id:
          type: integer
          example: 2
        player_performances_attributes:
          type: array
          items:
            type: object
            properties:
              kills:
                type: integer
                default: 0
                example: 25
              deaths:
                type: integer
                default: 0
                example: 20
              assists:
                type: integer
                default: 0
                example: 20
              headshots:
                type: integer
                default: 0
                example: 10
              player_id:
                type: integer
                example: 1
    player_params:
      type: object
      properties:
        name:
          type: string
          example: Name
        nickname:
          type: string
          example: Nickname
        nationality:
          type: string
          example: Nationality
        birth_date:
          type: string
          format: date
          example: '2001-01-01'
        team_id:
          type: integer
          example: 1
    player_response:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Player Name
        nickname:
          type: string
          example: Player Nickname
        nationality:
          type: string
          example: Brazilian
        birth_date:
          type: string
          format: date
          example: '2006-01-01'
        age:
          type: integer
          example: 18
        team:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Team Name
            country:
              type: string
              example: Brasil
            region:
              type: string
              example: South America
    team_params:
      type: object
      properties:
        name:
          type: string
          example: Name
        country:
          type: string
          example: Country
        region:
          type: string
          example: Continent
    team_response:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: " Name"
        country:
          type: string
          example: Country
        region:
          type: string
          example: Continent
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: " Name"
              nickname:
                type: string
                example: " Nickname"
              nationality:
                type: string
                example: Nationality
              birth_date:
                type: string
                format: date
                example: '2001-01-01'
              age:
                type: integer
                example: 18
